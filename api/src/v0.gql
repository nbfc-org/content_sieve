type Query {
  currentUser: User
  postsByUser(userId: String!): [Post]
}

type Mutation {
  addPost(id: ID, content: String!, parent: ID, index: String): Post
}

type User {
  id: ID!
  username: String!
  posts: [ID]
  karma: Int
}

type Text {
  body: String!
}

type Link {
  url: String!
  title: String
}

union Content = Link | Text

type Post {
  id: ID!
  content: Content!
  userId: ID!
  createdAt: Float!
  parent: ID
  replies: [ID]
  tags: [ID]
  score: Int
  index: String
}

type Tag {
  id: ID!
  slug: String!
  createdAt: Float!
  posts: [ID]
}

enum VoteType {
  UP,
  DOWN,
  FLAG,
  SAVE,
  HIDE,
}

type Vote {
  id: ID!
  type: VoteType!
  createdAt: Float!
  userId: ID!
  postId: ID!
}